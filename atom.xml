<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[katsyoshiのめもみたいなもの]]></title>
  <link href="http://blog.katsyoshi.org/atom.xml" rel="self"/>
  <link href="http://blog.katsyoshi.org/"/>
  <updated>2015-05-11T22:21:03+09:00</updated>
  <id>http://blog.katsyoshi.org/</id>
  <author>
    <name><![CDATA[katsyoshi]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ゴールデンウィークのお買いもの]]></title>
    <link href="http://blog.katsyoshi.org/blog/2015/05/11/golden-weak/"/>
    <updated>2015-05-11T21:38:35+09:00</updated>
    <id>http://blog.katsyoshi.org/blog/2015/05/11/golden-weak</id>
    <content type="html"><![CDATA[<p>GWに勢い余って買いものしたのでそれを。</p>

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=katsyoshi05-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B00J5ZBVFY" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<p>Roomba買いました。</p>

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=katsyoshi05-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B004N3RQ5W" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<p>机買いました。</p>

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=katsyoshi05-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B00G21MID8" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<p>Kinesis買いました。</p>

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=katsyoshi05-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B000EVPGTU" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=katsyoshi05-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B000P4D5F8" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<p>コーヒーセット買いました。</p>

<p>もともと欲しかったのもあり、勢いで買ってしまいました。</p>

<p>Roombaの方は炬燵をまだ出してるのもあり、動かしていないです。</p>

<p>机は1ヶ月ほど前に椅子を買ったのもあり、買いました。
足が短いので、椅子を低くしたいのですが、天板が高いので足置き場をつくってそこにのせています。
それ以外の気になる点としては、角がちょっと痛いというぐらいで今のところ満足しています。</p>

<p>Kinesisは以前仕事で週1日だけ使わせてもらったことがあったので、気に入ったのでそれで買いました。
赤軸モデルを買ったのですが、カチカチ音がしないのでこれはこれでイイカンジです。</p>

<p>コーヒーセットは、机がきてから買う予定で買いました。このドリッパ用の用紙を見付けるのが大変で、2時間ほど彷徨いました。</p>

<p>これで欲しいものは大体そろったのですが、最近デスクトップPC欲しくなってきたんだよなぁ…</p>

<p>もうしわけねぇ。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[バイバイX240]]></title>
    <link href="http://blog.katsyoshi.org/blog/2015/05/10/shred-x240/"/>
    <updated>2015-05-10T11:05:19+09:00</updated>
    <id>http://blog.katsyoshi.org/blog/2015/05/10/shred-x240</id>
    <content type="html"><![CDATA[<p>新しく<a href="http://blog.katsyoshi.org/blog/2015/04/15/looks-good-new-machine/">X250</a>を買ったので、X240の中身を削除します。
以下のコマンドでできるようです。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>sudo shred -n 3 -v /dev/sda
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Softether]]></title>
    <link href="http://blog.katsyoshi.org/blog/2015/05/03/softether/"/>
    <updated>2015-05-03T16:28:42+09:00</updated>
    <id>http://blog.katsyoshi.org/blog/2015/05/03/softether</id>
    <content type="html"><![CDATA[<p>Ubuntuに<a href="https://www.softether.jp/">SoftEther</a>を導入してみた。</p>

<h2>マシン構成</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>OS: Ubuntu Linux 14.4.0.2 LTS
</span><span class='line'>Machine: SakuraVPS 1GBプラン</span></code></pre></td></tr></table></div></figure>


<h2>インストール</h2>

<p><a href="http://qiita.com/Makotonton/items/18683a9f1e846433c035">ここ</a>を参考にインストール、設定すればいけます。</p>

<h3>嵌ったところ</h3>

<p><code>nginx</code> で <code>ssl</code> 動かしてた。</p>

<p>設定ができなかったが <code>sudo service nginx stop</code> として、 <code>nginx</code> を止めたあと、 <code>sudo vpncmd</code> とすれば設定できます。</p>

<h2>おわり</h2>

<p>自作のRailsアプリCIを自宅で動かそうと思ってVPN導入してみたが、一人で開発してるしCIに問題がない限り必要ないというのを構築したあと気が付いた。</p>

<h3>参考</h3>

<ol>
<li><a href="http://qiita.com/Makotonton/items/18683a9f1e846433c035">http://qiita.com/Makotonton/items/18683a9f1e846433c035</a></li>
<li><a href="https://www.softether.jp/">https://www.softether.jp/</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Visual Studio Codeを使ってみた]]></title>
    <link href="http://blog.katsyoshi.org/blog/2015/04/30/use-visual-studio-code/"/>
    <updated>2015-04-30T13:09:55+09:00</updated>
    <id>http://blog.katsyoshi.org/blog/2015/04/30/use-visual-studio-code</id>
    <content type="html"><![CDATA[<p><a href="https://code.visualstudio.com/">Visual Studio Code</a>というものがでたので普段利用している
Linuxで使ってみた。</p>

<h2>インストール</h2>

<p>は簡単にできて、ウェブサイトからZIPファイルをダウンロードして展開し、展開したディレクトリで
以下のコマンドで実行できます</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>./Code
</span></code></pre></td></tr></table></div></figure>


<h2>感想</h2>

<p>VSC使ってみたけど、日本語表示がされない。</p>

<p style="text-align:center;"> <img src="http://blog.katsyoshi.org/images/screenshot/vsc_japanese.png" alt="" /></p>

<p><em>追記</em></p>

<p>フォントを変更すると表示できるようになりました。</p>

<p><code>File -&gt; Preferences -&gt; User Settings</code> から、 <code>settings.json</code> を開き、
以下のように追加する</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="nt">&quot;editor.fontFamily&quot;</span><span class="p">:</span> <span class="s2">&quot;Ricty&quot;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p style="text-align:center;"> <img src="http://blog.katsyoshi.org/images/screenshot/vsc_settings.png" alt="" /></p>

<p><em>追記おわり</em></p>

<p>デバッガ動かすためにMONOが必要。</p>

<p><img src="http://blog.katsyoshi.org/images/screenshot/vsc_debugger_needed_mono.png" alt="" /></p>

<p>補完がよさそう。Rubyでの補完の出かたです。</p>

<p style="text-align:center;"> <img src="http://blog.katsyoshi.org/images/screenshot/vsc_completion.png" alt="" /></p>

<p>などあります。</p>

<p>そのうちなにかこれで書くかなぁ。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[おにゅーな]]></title>
    <link href="http://blog.katsyoshi.org/blog/2015/04/15/looks-good-new-machine/"/>
    <updated>2015-04-15T01:15:45+09:00</updated>
    <id>http://blog.katsyoshi.org/blog/2015/04/15/looks-good-new-machine</id>
    <content type="html"><![CDATA[<p>以前買った<a href="http://blog.katsyoshi.org/blog/2014/08/20/gentoo-install-battle-part-i/">X240</a>があまりにも使い辛いので
X250を買った。それ以外にもメガネも一つ買ってみた。</p>

<p>あと欲しいのは、ルンバかなあ</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ファイル名間違えてテスト通らなかった話]]></title>
    <link href="http://blog.katsyoshi.org/blog/2015/04/09/file-name-needs-scss-extention/"/>
    <updated>2015-04-09T15:38:49+09:00</updated>
    <id>http://blog.katsyoshi.org/blog/2015/04/09/file-name-needs-scss-extention</id>
    <content type="html"><![CDATA[<p><a href="https://rails-assets.org">rails-assets.org</a> から <code>bootstrap-sass-official</code> をインストールし、動かしたら、 test環境でテストが落ちてたのでメモ。</p>

<h2>オチ</h2>

<p>CSSの<a href="https://twitter.com/izumin5210/status/586054782994874368">ファイル名</a>が <code>application.css.scss</code> じゃなかった。</p>

<h2>設定</h2>

<p>まず、<code>Gemfile</code> に以下のように追記をします。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">source</span> <span class="s1">&#39;https://rails-assets.org&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;rails-asstes-bootstrap-sass-official&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>あとはいつも通りにインストールします。
次に <code>app/assets/javascripts/application.js</code> や <code>app/assets/stylesheets/application.css</code> に必要な読み込みを<a href="http://qiita.com/izumin5210/items/73f93347a9fe458dbbf5">設定</a>します。</p>

<h2>問題</h2>

<p>以上の設定が終ったあと、 <code>cucumber</code> でテストを実行すると、</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">File</span> <span class="n">to</span> <span class="n">import</span> <span class="ow">not</span> <span class="n">found</span> <span class="ow">or</span> <span class="ss">unreadable</span><span class="p">:</span> <span class="n">bootstrap</span><span class="o">-</span><span class="n">sass</span><span class="o">-</span><span class="n">official</span><span class="o">/</span><span class="n">bootstrap</span><span class="o">-</span><span class="n">sprockets</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>などといわれますのでオチを参考にファイル名変更して終了です。</p>

<h2>おわり</h2>

<p>おわり</p>

<h3>参考</h3>

<ol>
<li><a href="http://qiita.com/izumin5210/items/73f93347a9fe458dbbf5">http://qiita.com/izumin5210/items/73f93347a9fe458dbbf5</a></li>
<li><a href="https://twitter.com/izumin5210/status/586054782994874368">https://twitter.com/izumin5210/status/586054782994874368</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Known_hostsに載っていないホストに接続確認しないようにする]]></title>
    <link href="http://blog.katsyoshi.org/blog/2015/04/07/many-ssh-connection/"/>
    <updated>2015-04-07T19:40:03+09:00</updated>
    <id>http://blog.katsyoshi.org/blog/2015/04/07/many-ssh-connection</id>
    <content type="html"><![CDATA[<p>昨日の<a href="http://blog.katsyoshi.org/blog/2015/04/06/careless-miss/">続き</a>で、 <code>lxc</code> で大量のサーバを立てて、
SSH接続すると、ホストごとに毎回接続確認が必要なので、確認せずに接続できるようにした。</p>

<h2>解決方法</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ssh -oStrictHostKeyChecking=no anywhere.example.com</span></code></pre></td></tr></table></div></figure>


<p>で接続確認の <code>yes or no</code> が出てこなくなります。</p>

<h2>おわり</h2>

<p>おわり。</p>

<p>そのうち <code>lxc</code> で100個ほどのインスタンスのベンチマークとりたい…</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[不注意なこと]]></title>
    <link href="http://blog.katsyoshi.org/blog/2015/04/06/careless-miss/"/>
    <updated>2015-04-06T22:25:28+09:00</updated>
    <id>http://blog.katsyoshi.org/blog/2015/04/06/careless-miss</id>
    <content type="html"><![CDATA[<p>Ubuntuで <code>lxc</code> を利用して、サーバを立ててたときに嵌ったこと</p>

<h2>はじまり</h2>

<p>Proxyを利用してインターネットに接続している。
このネットワークとして <code>ping</code> はLAN内なら届くが、外(google.com)とかには出ない。
設定がうまくいってるかどうかの確認する方法として、 <code>apt-get update</code> を利用して確認している。</p>

<p>最初は、 <code>lxc</code> の設定がうまくいっていないと思いなんども見直してたりした。
それでもWANの方に出ることができなかった。</p>

<p>サーバのネットワーク設定がよくないと思ってなんども見直したけど、問題なさそう。
最後に <code>sudo -i</code> で root にログインしたあと、 <code>apt-get update</code> したら、
ダウンロードはじまり、次へ進むことができた。</p>

<h2>原因</h2>

<p>原因としては <code>sudo command</code> で実行しても <code>Defaults reset_env</code> で環境変数がリセットされてたようだった。
ので、<code>Defaults keep_env+="PATH"</code> とか追加して解決した。</p>

<h2>おわり</h2>

<p>簡単なミスで3時間ほど時間を費したのでなんとかしたい。</p>

<h3>参考URL</h3>

<ol>
<li><a href="http://www.maepachi.com/blog/entry?id=128">http://www.maepachi.com/blog/entry?id=128</a></li>
<li><a href="http://office.tsukuba-bunko.org/ppoi/entry/systemwide-rbenv">http://office.tsukuba-bunko.org/ppoi/entry/systemwide-rbenv</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Asakusa.rbの300回記念パーティに行ってきた]]></title>
    <link href="http://blog.katsyoshi.org/blog/2015/03/18/party-of-asakusa-dot-rb-300th/"/>
    <updated>2015-03-18T01:26:33+09:00</updated>
    <id>http://blog.katsyoshi.org/blog/2015/03/18/party-of-asakusa-dot-rb-300th</id>
    <content type="html"><![CDATA[<p><a href="https://asakusarb.doorkeeper.jp/events/22018">Asakusa.rbの300回記念パーティ</a>に行ってきた。
ずーっと、devopsについてちょっと気になることがあったので<a href="https://twitter.com/hsbt">@hsbtさん</a>に聞いてみたりしてた。</p>

<p>あとは終ったあとかなり早い花見してた。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Herokuでmaster以外のブランチを利用してデプロイする方法]]></title>
    <link href="http://blog.katsyoshi.org/blog/2015/03/17/heroku-deploy-anther-branch/"/>
    <updated>2015-03-17T12:08:17+09:00</updated>
    <id>http://blog.katsyoshi.org/blog/2015/03/17/heroku-deploy-anther-branch</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>git push heroku your-branch:master
</span></code></pre></td></tr></table></div></figure>


<h3>参考</h3>

<ol>
<li><a href="http://stackoverflow.com/questions/1823397/heroku-using-git-branch-is-confusing">http://stackoverflow.com/questions/1823397/heroku-using-git-branch-is-confusing</a></li>
<li><a href="http://qiita.com/pugiemonn/items/bd79abbc72c20d8ee9a7">http://qiita.com/pugiemonn/items/bd79abbc72c20d8ee9a7</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Emerge --syncをgitにかえたはなし]]></title>
    <link href="http://blog.katsyoshi.org/blog/2015/02/24/portage2git/"/>
    <updated>2015-02-24T00:13:18+09:00</updated>
    <id>http://blog.katsyoshi.org/blog/2015/02/24/portage2git</id>
    <content type="html"><![CDATA[<p>portageはデフォルトだと <code>rsync</code> を利用しての更新をしているので、
<code>git</code> を用いた方法に変更します。</p>

<h2>準備</h2>

<p><code>portage</code> を <code>2.2.17</code> に変更し、USEフラグとして <code>git</code> をつかいます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># USE=&quot;git ${USE}&quot; emerge -av \=portage-2.2.17</span>
</span></code></pre></td></tr></table></div></figure>


<p>つぎに、Gitのリポジトリを見に行くように<a href="http://qiita.com/wjn/items/a3b71059211711501e35">設定</a>します。</p>

<p>と設定してあとはいつもどおり <code>sudo eix-sync</code> させるだけで大丈夫です。</p>

<h2>おわり</h2>

<p>基本的にはリンク先だけ見てればいけると思います。</p>

<p>引越ししてWiMAXの電波の入りがわるくなったので鉄製ボウル買おうかとおもってたら2時間ほど<a href="https://ingress.com">徘徊</a>してました。</p>

<h3>参考サイト</h3>

<ol>
<li><a href="http://qiita.com/wjn/items/a3b71059211711501e35">http://qiita.com/wjn/items/a3b71059211711501e35</a></li>
<li><a href="https://wiki.gentoo.org/wiki/Project:Portage/Sync">https://wiki.gentoo.org/wiki/Project:Portage/Sync</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Blogの引越し]]></title>
    <link href="http://blog.katsyoshi.org/blog/2015/02/22/mv-sakura-github-dot-io/"/>
    <updated>2015-02-22T18:29:09+09:00</updated>
    <id>http://blog.katsyoshi.org/blog/2015/02/22/mv-sakura-github-dot-io</id>
    <content type="html"><![CDATA[<p>自分でblogを管理するのがちょっとだけ面倒になってきたので、
このblogを<a href="katsyoshi.github.io">github.io</a>に移行した。</p>

<h2>手順</h2>

<p>github.com に <code>katsyoshi.github.io</code> というリポジトリを作成し、以下のコマンドを実行</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>rake setup_github_pages
</span><span class='line'><span class="nb">set </span>your github repogitory
</span><span class='line'><span class="nv">$ </span>rake generate
</span><span class='line'><span class="nv">$ </span>rake deploy
</span></code></pre></td></tr></table></div></figure>


<p>そのあと、DNSでCNAMEに <code>katsyoshi.github.io</code> を設定し、リポジトリ<del>のトップ</del>に <code>blog.katsyoshi.org</code> と書いた <code>source/CNAME</code> ファイルを追加しおわりです。</p>

<h2>おわり</h2>

<p>おわり</p>

<h2>追記</h2>

<p>実は記事を追加したあと <code>rake deploy</code> ができないという問題がありましたが、そのときは、</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>rake generate
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>_deploy
</span><span class='line'><span class="nv">$ </span>git pull origin/master
</span><span class='line'><span class="nv">$ </span><span class="nb">cd</span> ../
</span><span class='line'><span class="nv">$ </span>rake deploy
</span></code></pre></td></tr></table></div></figure>


<p>で更新されます。</p>

<h3>参考サイト</h3>

<ol>
<li><a href="http://morizyun.github.io/blog/octopress-gitpage-minimum-install-guide/">http://morizyun.github.io/blog/octopress-gitpage-minimum-install-guide/</a></li>
<li><a href="http://blog.textfile.org/20141014/github/">http://blog.textfile.org/20141014/github/</a></li>
<li><a href="http://stackoverflow.com/questions/17609453/rake-gen-deploy-rejected-in-octopress">http://stackoverflow.com/questions/17609453/rake-gen-deploy-rejected-in-octopress</a></li>
<li><a href="http://learnaholic.me/2012/10/10/deploying-octopress-to-github-pages-and-setting-custom-subdomain-cname/">http://learnaholic.me/2012/10/10/deploying-octopress-to-github-pages-and-setting-custom-subdomain-cname/</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[XDGの設定]]></title>
    <link href="http://blog.katsyoshi.org/blog/2015/02/16/setting-xdg-open/"/>
    <updated>2015-02-16T18:03:16+09:00</updated>
    <id>http://blog.katsyoshi.org/blog/2015/02/16/setting-xdg-open</id>
    <content type="html"><![CDATA[<p>急に <code>xdg-open</code> でブラウザが開かなくなったのでメモ</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>xdg-mime default google-chrome.desktop x-scheme-handler/http
</span><span class='line'><span class="nv">$ </span>xdg-mime default google-chrome.desktop x-scheme-handler/https
</span></code></pre></td></tr></table></div></figure>


<p>で設定できます。</p>

<h3>参考</h3>

<p>&lsquo;xdg-open&rsquo;, archlinux wiki, <a href="https://wiki.archlinux.org/index.php/xdg-open,">https://wiki.archlinux.org/index.php/xdg-open,</a> 2015/02/16</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[とりあえずibusやめてみた]]></title>
    <link href="http://blog.katsyoshi.org/blog/2015/02/12/remove-ibus/"/>
    <updated>2015-02-12T07:10:29+09:00</updated>
    <id>http://blog.katsyoshi.org/blog/2015/02/12/remove-ibus</id>
    <content type="html"><![CDATA[<p><a href="https://www.google.co.jp/webhp?sourceid=chrome-instant&amp;ion=1&amp;espv=2&amp;ie=UTF-8#newwindow=1&amp;q=ibus1.5">ibus-1.5</a>からあまり評判がよろしくない(特に不満はない)ので、あたらしく<a href="https://code.google.com/p/fcitx/">fcitx</a>を導入してみた。</p>

<h2>前提条件</h2>

<p>ここでは<a href="http://www.gentoo.org">Gentoo/Linux</a>での導入方法について述べています。
日本語変換エンジンとしてMozcについて述べています。</p>

<h2>導入</h2>

<p>とりあえずfcitxをインストール、設定します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>emerge -av fcitx
</span><span class='line'>
</span><span class='line'><span class="nv">$ $EDITOR</span> .xinitrc
</span><span class='line'>
</span><span class='line'><span class="nb">export </span><span class="nv">XMODIFIERS</span><span class="o">=</span>@im<span class="o">=</span><span class="s2">&quot;fcitx&quot;</span>
</span><span class='line'><span class="nb">export </span><span class="nv">GTK_IM_MODULE</span><span class="o">=</span><span class="s2">&quot;fcitx&quot;</span>
</span><span class='line'><span class="nb">export </span><span class="nv">QT_IM_MODULE</span><span class="o">=</span><span class="s2">&quot;fcitx&quot;</span>
</span><span class='line'>fcitx
</span></code></pre></td></tr></table></div></figure>


<p>これでインストールはこれでおわりです。</p>

<h2>fcitxでmozc</h2>

<p>これは、<a href="http://gpo.zugaina.org/app-i18n/mozc">overlay</a>が提供されいているのでそれで導入します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ $EDITOR</span> /etc/portage/make.conf
</span><span class='line'><span class="nv">USE</span><span class="o">=</span><span class="s2">&quot;fcitx ${USE}&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>sudo emerge -av mozc
</span></code></pre></td></tr></table></div></figure>


<p>で、インストールすれば使えるようになります。</p>

<h2>おわり</h2>

<p><a href="http://anond.hatelabo.jp/20150210030728">こういうの</a>があったので、真面目にかこうかと思ったんですがどめんどうなので導入メモになりました。</p>

<p>あと引越ししたので贈っていただいてもいいんですよ？
<a href="http://www.amazon.co.jp/registry/wishlist/V0YZPO1OYFH5/">http://www.amazon.co.jp/registry/wishlist/V0YZPO1OYFH5/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rictyやめるってよ]]></title>
    <link href="http://blog.katsyoshi.org/blog/2015/01/31/emacs-fonts/"/>
    <updated>2015-01-31T07:10:29+09:00</updated>
    <id>http://blog.katsyoshi.org/blog/2015/01/31/emacs-fonts</id>
    <content type="html"><![CDATA[<p>普段、emacs上でフォントを <code>Ricty</code> にして使ってたけど、微妙にずれるのを解消できなかったはなし</p>

<h2>症状と設定</h2>

<p>Rictyのときの症状と設定をのせておきます。</p>

<p style="text-align:center;"> <img src="http://blog.katsyoshi.org/images/screenshot/Ricty.png" alt="Ricty" /></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='scheme'><span class='line'><span class="p">(</span><span class="nf">set-face-attribute</span> <span class="ss">&#39;default</span> <span class="nv">nil</span> <span class="nv">:family</span> <span class="s">&quot;Ricty&quot;</span> <span class="nv">:height</span> <span class="mi">135</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="nf">set-fontset-font</span> <span class="p">(</span><span class="nf">frame-parameter</span> <span class="nv">nil</span> <span class="ss">&#39;font</span><span class="p">)</span> <span class="ss">&#39;japanese-jisx0208</span> <span class="o">&#39;</span><span class="p">(</span><span class="s">&quot;Ricty&quot;</span> <span class="o">.</span> <span class="s">&quot;iso10646-1&quot;</span><span class="p">))</span>
</span><span class='line'><span class="p">(</span><span class="nf">setq</span> <span class="nv">face-font-rescale-alist</span> <span class="o">&#39;</span><span class="p">((</span><span class="s">&quot;Ricty&quot;</span> <span class="o">.</span> <span class="mf">1.2</span><span class="p">)))</span>
</span></code></pre></td></tr></table></div></figure>


<p>で解消できそうにないので DejaVu を用いて表示するように変更しました。</p>

<p style="text-align:center;"> <img src="http://blog.katsyoshi.org/images/screenshot/DejaVu.png" alt="DejaVu" /></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='scheme'><span class='line'><span class="p">(</span><span class="nf">set-face-attribute</span> <span class="ss">&#39;default</span> <span class="nv">nil</span> <span class="nv">:family</span> <span class="s">&quot;DejaVu&quot;</span> <span class="nv">:height</span> <span class="mi">135</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>こんな感じになりました。</p>

<h2>おわり</h2>

<p>よくわからないので諦めました。ので参考に</p>

<p>最後に引っ越ししました。</p>

<p><a href="http://www.amazon.co.jp/registry/wishlist/V0YZPO1OYFH5/">http://www.amazon.co.jp/registry/wishlist/V0YZPO1OYFH5/</a></p>

<h2>追記</h2>

<blockquote class="twitter-tweet" lang="en"><p><a href="https://twitter.com/katsyoshi">@katsyoshi</a> (setq face-font-rescale-alist &#39;((&quot;Ricty&quot; . 1.0))) で常用していてずれないのですが、これだとどうなりますか?</p>&mdash; つまみ (@polamjag) <a href="https://twitter.com/polamjag/status/561875516118949889">February 1, 2015</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>とアドバイスがありましたので、やってみました!!!!!!</p>

<p style="text-align:center;"> <img src="http://blog.katsyoshi.org/images/screenshot/Ricty1.0.png" alt="Ricty-1.0" /></p>

<p>ほんとにちょっとずれて気になる…</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Start Rust by Example]]></title>
    <link href="http://blog.katsyoshi.org/blog/2015/01/27/start-rust/"/>
    <updated>2015-01-27T07:10:29+09:00</updated>
    <id>http://blog.katsyoshi.org/blog/2015/01/27/start-rust</id>
    <content type="html"><![CDATA[<p>年ぁけたので、新しいプログラミング言語を覚えようと思い<a href="http://www.rust-lang.org">Rust Lang</a>を始めました。</p>

<p>チュートリアルとして<a href="http://rustbyexample.com">Rust bye Example</a>を<a href="https://github.com/katsyoshi/rustbyexamle">やっていって</a>ます。</p>

<h2>気が付いた点</h2>

<p>Rustという言語は変更が多いらしいのでここでは、Chap.1-14(2015/01/25時点)までで気がついた点で書きます。 まず、今回環境を下に示します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>rustc --version
</span><span class='line'>rustc 1.0.0-nightly <span class="o">(</span>29bd9a06e 2015-01-20 23:03:09 +0000<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>i &ndash;> is</h3>

<p>まず、<a href="https://github.com/katsyoshi/rustbyexample/blob/master/2.FormattedPrint/FormattedPrint.rs#L9">Chap. 2のコード</a>で<code>integer</code>のsuffixが<code>is</code>に変更されています。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>FormattedPrint.rs:9:69: 9:71 warning: the <span class="sb">`</span>i<span class="sb">`</span> suffix on integers is deprecated; use <span class="sb">`</span>is<span class="sb">`</span> or one of the fixed-sized suffixes
</span><span class='line'>FormattedPrint.rs:9     println!<span class="o">(</span><span class="s2">&quot;{} of {:b} people know binary, the other half don&#39;t&quot;</span>, 1i, 2i<span class="o">)</span>;
</span><span class='line'>                                                                                        ^~
</span></code></pre></td></tr></table></div></figure>


<h3>range(a, b) –> (a..b)</h3>

<p>つぎに、<a href="https://github.com/katsyoshi/rustbyexample/blob/master/10.ForAndRange/ForAndRange.rs#L2">Chap. 10のコード</a>で<code>range(a, b)</code>がunstableになっているので<code>(a..b)</code>に変更しました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>ForAndRange.rs:2:14: 2:19 warning: use of unstable item: will be replaced by range notation, <span class="c">#[warn(unstable)] on by default</span>
</span><span class='line'>ForAndRange.rs:2     <span class="k">for </span>n in range<span class="o">(</span>1u32, 101<span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                              ^~~~~
</span></code></pre></td></tr></table></div></figure>


<h2>おわり</h2>

<p>いま確認してたらそもそもRust by Example自体が変更されてた…</p>

<p>ちゃんちゃん</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby on RailsでTypeScriptを使ってみる]]></title>
    <link href="http://blog.katsyoshi.org/blog/2015/01/12/typescript-in-rails/"/>
    <updated>2015-01-12T11:41:25+09:00</updated>
    <id>http://blog.katsyoshi.org/blog/2015/01/12/typescript-in-rails</id>
    <content type="html"><![CDATA[<p>ふとRuby on RailsでTypeScriptを使いたくなったのでうごくようにしてみた。</p>

<h2>インストール</h2>

<p>これは簡単で <code>Gemfile</code> に <code>typescript-rails</code> を追加すればいけます。ですが、<a href="http://stackoverflow.com/questions/28117786/why-am-i-not-able-to-compile-a-file-that-references-jquery-d-ts">jQueryがTypeScript v1.4以上しかサポートしていないようなので</a>それに対応したものも追加します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s1">&#39;typescript-src&#39;</span><span class="p">,</span> <span class="ss">github</span><span class="p">:</span> <span class="s1">&#39;katsyoshi/typescript-src-ruby&#39;</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;typescript-rails&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>インストールはこれだけでOKです。</p>

<h3>jQueryをつかう</h3>

<p>TypeScriptでjQueryを使う場合、TypeScriptの型定義ファイルをインストールする必要があります。
で、それを自力で作るのは大変なので、 <code>tsd</code> を利用してインストールします。</p>

<h4>tsd をインストール</h4>

<p><code>tsd</code> は <code>npm</code> でインストールできるので、それでインストールします。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>npm install tsd -g
</span></code></pre></td></tr></table></div></figure>


<p>でインストールできたので、この <code>tsd</code> を利用してjQueryの型定義ファイルをインストールします。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>tsd init
</span><span class='line'><span class="nv">$ $EDITOR</span> tsd.json
</span><span class='line'>  path: <span class="s2">&quot;app/assets/javascripts/typings&quot;</span>,
</span><span class='line'>  bundle: <span class="s2">&quot;app/assets/javascripts/typings/tsd.d.ts&quot;</span>
</span><span class='line'><span class="nv">$ </span>tsd query jquery -osa install
</span></code></pre></td></tr></table></div></figure>


<p>でjQueryを利用する準備は整いました。</p>

<h2>TypeScriptを書いてみよう</h2>

<p>コンソールに <code>hello, world!</code> を出すだけの例を示します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">$</span><span class="p">(()</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;hello, world!&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>でいけますよ。
が <code>$('#hello').text('hoge');</code> いかねぇ。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mikutter Advent Calendar 1日目]]></title>
    <link href="http://blog.katsyoshi.org/blog/2014/12/01/mikutter-advent-calendar-1-day/"/>
    <updated>2014-12-01T23:59:59+09:00</updated>
    <id>http://blog.katsyoshi.org/blog/2014/12/01/mikutter-advent-calendar-1-day</id>
    <content type="html"><![CDATA[<p><a href="http://www.adventar.org/calendar/401">一日目</a>らしいですね。</p>

<h2>今のmikutter環境</h2>

<p>はGentoo/Linuxで動いています。</p>

<p>よく考えてみたら今の環境になってLinuxでmikutterを使うのははじめてです。 Linuxになって一番感じたのインストールすごく楽になったことです。</p>

<h2>今までのmikutter環境</h2>

<p>今までMacで基本的に利用してたので苦労してた。 Macではとくにインストール、gemのupdateが大変でした。 Macでの環境では、HomebrewのGTK2のせいか、RubyGtk2がまともに動かないことが頻繁におこりました。 あと、最後まで解決できなかったのが特定の文字列がくるとクラッシュするというバグがありました。</p>

<h2>mikutterとの出会い</h2>

<p>出会いとしてはtwitterでTLを眺めてたら、@toshi_a って人がtwitterクライアントをつくってるらしいということで 取り敢えずFreeBSDでインストールしたのがはじめてだったとおもいます。 このときはFreeBSDでインストールして、X転送したものをMacで表示したとおもいます。</p>

<p>それ以降はMacでインストールして、<a href="http://github.com/katsyoshi/fav">mikutterのプラグイン</a>を書いて公開したりしてました。</p>

<h2>おわり</h2>

<p>おわりおわり。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Railsで空のテストファイルを削除]]></title>
    <link href="http://blog.katsyoshi.org/blog/2014/11/21/remove-empty-example-files/"/>
    <updated>2014-11-21T16:07:38+09:00</updated>
    <id>http://blog.katsyoshi.org/blog/2014/11/21/remove-empty-example-files</id>
    <content type="html"><![CDATA[<p>Ruby on RailsのプロジェクトでGit管理されているTestで空のテストファイルを
削除するには以下のコマンドを利用することで削除できます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>git grep -e it --or -e specify -L -- spec/<span class="o">{</span>model,controller<span class="o">}</span>s | xgrep git rm -f --
</span></code></pre></td></tr></table></div></figure>


<h3>参考</h3>

<ul>
<li><a href="https://www.kernel.org/pub/software/scm/git/docs/git-grep.html">man git grep</a></li>
<li><a href="http://qiita.com/tbaba/items/a67c8d79c6c4d0dc9b73">Git grepを便利に使う-eオプションについて</a></li>
<li><a href="http://qiita.com/rosylilly/items/9648ad2c8aa53465372b">複数人での Git 開発に便利な 3 つのコマンド</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mikutter Advent Calendar]]></title>
    <link href="http://blog.katsyoshi.org/blog/2014/11/04/mikutter-advent-calendar/"/>
    <updated>2014-11-04T23:13:40+09:00</updated>
    <id>http://blog.katsyoshi.org/blog/2014/11/04/mikutter-advent-calendar</id>
    <content type="html"><![CDATA[<p>寒くなりはじめましたね。今年も残すところあと二ヶ月ですね。
先日、浅草浅草寺で、Ingressおじさんに声かけられてイライラしてます。</p>

<p>そういうことで<a href="http://www.adventar.org/calendars/401">mikutterのAdventCalendar</a>を立てましたので参加してくだされ~</p>
]]></content>
  </entry>
  
</feed>
