<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[katsyoshiのめもみたいなもの]]></title>
  <link href="http://blog.katsyoshi.org/atom.xml" rel="self"/>
  <link href="http://blog.katsyoshi.org/"/>
  <updated>2015-04-07T19:48:39+09:00</updated>
  <id>http://blog.katsyoshi.org/</id>
  <author>
    <name><![CDATA[katsyoshi]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Known_hostsに載っていないホストに接続確認しないようにする]]></title>
    <link href="http://blog.katsyoshi.org/blog/2015/04/07/many-ssh-connection/"/>
    <updated>2015-04-07T19:40:03+09:00</updated>
    <id>http://blog.katsyoshi.org/blog/2015/04/07/many-ssh-connection</id>
    <content type="html"><![CDATA[<p>昨日の<a href="http://blog.katsyoshi.org/blog/2015/04/06/careless-miss/">続き</a>で、 <code>lxc</code> で大量のサーバを立てて、
SSH接続すると、ホストごとに毎回接続確認が必要なので、確認せずに接続できるようにした。</p>

<h2>解決方法</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ssh -oStrictHostKeyChecking=no anywhere.example.com</span></code></pre></td></tr></table></div></figure>


<p>で接続確認の <code>yes or no</code> が出てこなくなります。</p>

<h2>おわり</h2>

<p>おわり。</p>

<p>そのうち <code>lxc</code> で100個ほどのインスタンスのベンチマークとりたい…</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[不注意なこと]]></title>
    <link href="http://blog.katsyoshi.org/blog/2015/04/06/careless-miss/"/>
    <updated>2015-04-06T22:25:28+09:00</updated>
    <id>http://blog.katsyoshi.org/blog/2015/04/06/careless-miss</id>
    <content type="html"><![CDATA[<p>Ubuntuで <code>lxc</code> を利用して、サーバを立ててたときに嵌ったこと</p>

<h2>はじまり</h2>

<p>Proxyを利用してインターネットに接続している。
このネットワークとして <code>ping</code> はLAN内なら届くが、外(google.com)とかには出ない。
設定がうまくいってるかどうかの確認する方法として、 <code>apt-get update</code> を利用して確認している。</p>

<p>最初は、 <code>lxc</code> の設定がうまくいっていないと思いなんども見直してたりした。
それでもWANの方に出ることができなかった。</p>

<p>サーバのネットワーク設定がよくないと思ってなんども見直したけど、問題なさそう。
最後に <code>sudo -i</code> で root にログインしたあと、 <code>apt-get update</code> したら、
ダウンロードはじまり、次へ進むことができた。</p>

<h2>原因</h2>

<p>原因としては <code>sudo command</code> で実行しても <code>Defaults reset_env</code> で環境変数がリセットされてたようだった。
ので、<code>Defaults keep_env+="PATH"</code> とか追加して解決した。</p>

<h2>おわり</h2>

<p>簡単なミスで3時間ほど時間を費したのでなんとかしたい。</p>

<h3>参考URL</h3>

<ol>
<li><a href="http://www.maepachi.com/blog/entry?id=128">http://www.maepachi.com/blog/entry?id=128</a></li>
<li><a href="http://office.tsukuba-bunko.org/ppoi/entry/systemwide-rbenv">http://office.tsukuba-bunko.org/ppoi/entry/systemwide-rbenv</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Asakusa.rbの300回記念パーティに行ってきた]]></title>
    <link href="http://blog.katsyoshi.org/blog/2015/03/18/party-of-asakusa-dot-rb-300th/"/>
    <updated>2015-03-18T01:26:33+09:00</updated>
    <id>http://blog.katsyoshi.org/blog/2015/03/18/party-of-asakusa-dot-rb-300th</id>
    <content type="html"><![CDATA[<p><a href="https://asakusarb.doorkeeper.jp/events/22018">Asakusa.rbの300回記念パーティ</a>に行ってきた。
ずーっと、devopsについてちょっと気になることがあったので<a href="https://twitter.com/hsbt">@hsbtさん</a>に聞いてみたりしてた。</p>

<p>あとは終ったあとかなり早い花見してた。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Herokuでmaster以外のブランチを利用してデプロイする方法]]></title>
    <link href="http://blog.katsyoshi.org/blog/2015/03/17/heroku-deploy-anther-branch/"/>
    <updated>2015-03-17T12:08:17+09:00</updated>
    <id>http://blog.katsyoshi.org/blog/2015/03/17/heroku-deploy-anther-branch</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>git push heroku your-branch:master
</span></code></pre></td></tr></table></div></figure>


<h3>参考</h3>

<ol>
<li><a href="http://stackoverflow.com/questions/1823397/heroku-using-git-branch-is-confusing">http://stackoverflow.com/questions/1823397/heroku-using-git-branch-is-confusing</a></li>
<li><a href="http://qiita.com/pugiemonn/items/bd79abbc72c20d8ee9a7">http://qiita.com/pugiemonn/items/bd79abbc72c20d8ee9a7</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Emerge --syncをgitにかえたはなし]]></title>
    <link href="http://blog.katsyoshi.org/blog/2015/02/24/portage2git/"/>
    <updated>2015-02-24T00:13:18+09:00</updated>
    <id>http://blog.katsyoshi.org/blog/2015/02/24/portage2git</id>
    <content type="html"><![CDATA[<p>portageはデフォルトだと <code>rsync</code> を利用しての更新をしているので、
<code>git</code> を用いた方法に変更します。</p>

<h2>準備</h2>

<p><code>portage</code> を <code>2.2.17</code> に変更し、USEフラグとして <code>git</code> をつかいます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># USE=&quot;git ${USE}&quot; emerge -av \=portage-2.2.17</span>
</span></code></pre></td></tr></table></div></figure>


<p>つぎに、Gitのリポジトリを見に行くように<a href="http://qiita.com/wjn/items/a3b71059211711501e35">設定</a>します。</p>

<p>と設定してあとはいつもどおり <code>sudo eix-sync</code> させるだけで大丈夫です。</p>

<h2>おわり</h2>

<p>基本的にはリンク先だけ見てればいけると思います。</p>

<p>引越ししてWiMAXの電波の入りがわるくなったので鉄製ボウル買おうかとおもってたら2時間ほど<a href="https://ingress.com">徘徊</a>してました。</p>

<h3>参考サイト</h3>

<ol>
<li><a href="http://qiita.com/wjn/items/a3b71059211711501e35">http://qiita.com/wjn/items/a3b71059211711501e35</a></li>
<li><a href="https://wiki.gentoo.org/wiki/Project:Portage/Sync">https://wiki.gentoo.org/wiki/Project:Portage/Sync</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Blogの引越し]]></title>
    <link href="http://blog.katsyoshi.org/blog/2015/02/22/mv-sakura-github-dot-io/"/>
    <updated>2015-02-22T18:29:09+09:00</updated>
    <id>http://blog.katsyoshi.org/blog/2015/02/22/mv-sakura-github-dot-io</id>
    <content type="html"><![CDATA[<p>自分でblogを管理するのがちょっとだけ面倒になってきたので、
このblogを<a href="katsyoshi.github.io">github.io</a>に移行した。</p>

<h2>手順</h2>

<p>github.com に <code>katsyoshi.github.io</code> というリポジトリを作成し、以下のコマンドを実行</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>rake setup_github_pages
</span><span class='line'><span class="nb">set </span>your github repogitory
</span><span class='line'><span class="nv">$ </span>rake generate
</span><span class='line'><span class="nv">$ </span>rake deploy
</span></code></pre></td></tr></table></div></figure>


<p>そのあと、DNSでCNAMEに <code>katsyoshi.github.io</code> を設定し、リポジトリ<del>のトップ</del>に <code>blog.katsyoshi.org</code> と書いた <code>source/CNAME</code> ファイルを追加しおわりです。</p>

<h2>おわり</h2>

<p>おわり</p>

<h2>追記</h2>

<p>実は記事を追加したあと <code>rake deploy</code> ができないという問題がありましたが、そのときは、</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>rake generate
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>_deploy
</span><span class='line'><span class="nv">$ </span>git pull origin/master
</span><span class='line'><span class="nv">$ </span><span class="nb">cd</span> ../
</span><span class='line'><span class="nv">$ </span>rake deploy
</span></code></pre></td></tr></table></div></figure>


<p>で更新されます。</p>

<h3>参考サイト</h3>

<ol>
<li><a href="http://morizyun.github.io/blog/octopress-gitpage-minimum-install-guide/">http://morizyun.github.io/blog/octopress-gitpage-minimum-install-guide/</a></li>
<li><a href="http://blog.textfile.org/20141014/github/">http://blog.textfile.org/20141014/github/</a></li>
<li><a href="http://stackoverflow.com/questions/17609453/rake-gen-deploy-rejected-in-octopress">http://stackoverflow.com/questions/17609453/rake-gen-deploy-rejected-in-octopress</a></li>
<li><a href="http://learnaholic.me/2012/10/10/deploying-octopress-to-github-pages-and-setting-custom-subdomain-cname/">http://learnaholic.me/2012/10/10/deploying-octopress-to-github-pages-and-setting-custom-subdomain-cname/</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[XDGの設定]]></title>
    <link href="http://blog.katsyoshi.org/blog/2015/02/16/setting-xdg-open/"/>
    <updated>2015-02-16T18:03:16+09:00</updated>
    <id>http://blog.katsyoshi.org/blog/2015/02/16/setting-xdg-open</id>
    <content type="html"><![CDATA[<p>急に <code>xdg-open</code> でブラウザが開かなくなったのでメモ</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>xdg-mime default google-chrome.desktop x-scheme-handler/http
</span><span class='line'><span class="nv">$ </span>xdg-mime default google-chrome.desktop x-scheme-handler/https
</span></code></pre></td></tr></table></div></figure>


<p>で設定できます。</p>

<h3>参考</h3>

<p>&lsquo;xdg-open&rsquo;, archlinux wiki, <a href="https://wiki.archlinux.org/index.php/xdg-open,">https://wiki.archlinux.org/index.php/xdg-open,</a> 2015/02/16</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[とりあえずibusやめてみた]]></title>
    <link href="http://blog.katsyoshi.org/blog/2015/02/12/remove-ibus/"/>
    <updated>2015-02-12T07:10:29+09:00</updated>
    <id>http://blog.katsyoshi.org/blog/2015/02/12/remove-ibus</id>
    <content type="html"><![CDATA[<p><a href="https://www.google.co.jp/webhp?sourceid=chrome-instant&amp;ion=1&amp;espv=2&amp;ie=UTF-8#newwindow=1&amp;q=ibus1.5">ibus-1.5</a>からあまり評判がよろしくない(特に不満はない)ので、あたらしく<a href="https://code.google.com/p/fcitx/">fcitx</a>を導入してみた。</p>

<h2>前提条件</h2>

<p>ここでは<a href="http://www.gentoo.org">Gentoo/Linux</a>での導入方法について述べています。
日本語変換エンジンとしてMozcについて述べています。</p>

<h2>導入</h2>

<p>とりあえずfcitxをインストール、設定します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>emerge -av fcitx
</span><span class='line'>
</span><span class='line'><span class="nv">$ $EDITOR</span> .xinitrc
</span><span class='line'>
</span><span class='line'><span class="nb">export </span><span class="nv">XMODIFIERS</span><span class="o">=</span>@im<span class="o">=</span><span class="s2">&quot;fcitx&quot;</span>
</span><span class='line'><span class="nb">export </span><span class="nv">GTK_IM_MODULE</span><span class="o">=</span><span class="s2">&quot;fcitx&quot;</span>
</span><span class='line'><span class="nb">export </span><span class="nv">QT_IM_MODULE</span><span class="o">=</span><span class="s2">&quot;fcitx&quot;</span>
</span><span class='line'>fcitx
</span></code></pre></td></tr></table></div></figure>


<p>これでインストールはこれでおわりです。</p>

<h2>fcitxでmozc</h2>

<p>これは、<a href="http://gpo.zugaina.org/app-i18n/mozc">overlay</a>が提供されいているのでそれで導入します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ $EDITOR</span> /etc/portage/make.conf
</span><span class='line'><span class="nv">USE</span><span class="o">=</span><span class="s2">&quot;fcitx ${USE}&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>sudo emerge -av mozc
</span></code></pre></td></tr></table></div></figure>


<p>で、インストールすれば使えるようになります。</p>

<h2>おわり</h2>

<p><a href="http://anond.hatelabo.jp/20150210030728">こういうの</a>があったので、真面目にかこうかと思ったんですがどめんどうなので導入メモになりました。</p>

<p>あと引越ししたので贈っていただいてもいいんですよ？
<a href="http://www.amazon.co.jp/registry/wishlist/V0YZPO1OYFH5/">http://www.amazon.co.jp/registry/wishlist/V0YZPO1OYFH5/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rictyやめるってよ]]></title>
    <link href="http://blog.katsyoshi.org/blog/2015/01/31/emacs-fonts/"/>
    <updated>2015-01-31T07:10:29+09:00</updated>
    <id>http://blog.katsyoshi.org/blog/2015/01/31/emacs-fonts</id>
    <content type="html"><![CDATA[<p>普段、emacs上でフォントを <code>Ricty</code> にして使ってたけど、微妙にずれるのを解消できなかったはなし</p>

<h2>症状と設定</h2>

<p>Rictyのときの症状と設定をのせておきます。</p>

<p style="text-align:center;"> <img src="http://blog.katsyoshi.org/images/screenshot/Ricty.png" alt="Ricty" /></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='scheme'><span class='line'><span class="p">(</span><span class="nf">set-face-attribute</span> <span class="ss">&#39;default</span> <span class="nv">nil</span> <span class="nv">:family</span> <span class="s">&quot;Ricty&quot;</span> <span class="nv">:height</span> <span class="mi">135</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="nf">set-fontset-font</span> <span class="p">(</span><span class="nf">frame-parameter</span> <span class="nv">nil</span> <span class="ss">&#39;font</span><span class="p">)</span> <span class="ss">&#39;japanese-jisx0208</span> <span class="o">&#39;</span><span class="p">(</span><span class="s">&quot;Ricty&quot;</span> <span class="o">.</span> <span class="s">&quot;iso10646-1&quot;</span><span class="p">))</span>
</span><span class='line'><span class="p">(</span><span class="nf">setq</span> <span class="nv">face-font-rescale-alist</span> <span class="o">&#39;</span><span class="p">((</span><span class="s">&quot;Ricty&quot;</span> <span class="o">.</span> <span class="mf">1.2</span><span class="p">)))</span>
</span></code></pre></td></tr></table></div></figure>


<p>で解消できそうにないので DejaVu を用いて表示するように変更しました。</p>

<p style="text-align:center;"> <img src="http://blog.katsyoshi.org/images/screenshot/DejaVu.png" alt="DejaVu" /></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='scheme'><span class='line'><span class="p">(</span><span class="nf">set-face-attribute</span> <span class="ss">&#39;default</span> <span class="nv">nil</span> <span class="nv">:family</span> <span class="s">&quot;DejaVu&quot;</span> <span class="nv">:height</span> <span class="mi">135</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>こんな感じになりました。</p>

<h2>おわり</h2>

<p>よくわからないので諦めました。ので参考に</p>

<p>最後に引っ越ししました。</p>

<p><a href="http://www.amazon.co.jp/registry/wishlist/V0YZPO1OYFH5/">http://www.amazon.co.jp/registry/wishlist/V0YZPO1OYFH5/</a></p>

<h2>追記</h2>

<blockquote class="twitter-tweet" lang="en"><p><a href="https://twitter.com/katsyoshi">@katsyoshi</a> (setq face-font-rescale-alist &#39;((&quot;Ricty&quot; . 1.0))) で常用していてずれないのですが、これだとどうなりますか?</p>&mdash; つまみ (@polamjag) <a href="https://twitter.com/polamjag/status/561875516118949889">February 1, 2015</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>とアドバイスがありましたので、やってみました!!!!!!</p>

<p style="text-align:center;"> <img src="http://blog.katsyoshi.org/images/screenshot/Ricty1.0.png" alt="Ricty-1.0" /></p>

<p>ほんとにちょっとずれて気になる…</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Start Rust by Example]]></title>
    <link href="http://blog.katsyoshi.org/blog/2015/01/27/start-rust/"/>
    <updated>2015-01-27T07:10:29+09:00</updated>
    <id>http://blog.katsyoshi.org/blog/2015/01/27/start-rust</id>
    <content type="html"><![CDATA[<p>年ぁけたので、新しいプログラミング言語を覚えようと思い<a href="http://www.rust-lang.org">Rust Lang</a>を始めました。</p>

<p>チュートリアルとして<a href="http://rustbyexample.com">Rust bye Example</a>を<a href="https://github.com/katsyoshi/rustbyexamle">やっていって</a>ます。</p>

<h2>気が付いた点</h2>

<p>Rustという言語は変更が多いらしいのでここでは、Chap.1-14(2015/01/25時点)までで気がついた点で書きます。 まず、今回環境を下に示します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>rustc --version
</span><span class='line'>rustc 1.0.0-nightly <span class="o">(</span>29bd9a06e 2015-01-20 23:03:09 +0000<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>i &ndash;> is</h3>

<p>まず、<a href="https://github.com/katsyoshi/rustbyexample/blob/master/2.FormattedPrint/FormattedPrint.rs#L9">Chap. 2のコード</a>で<code>integer</code>のsuffixが<code>is</code>に変更されています。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>FormattedPrint.rs:9:69: 9:71 warning: the <span class="sb">`</span>i<span class="sb">`</span> suffix on integers is deprecated; use <span class="sb">`</span>is<span class="sb">`</span> or one of the fixed-sized suffixes
</span><span class='line'>FormattedPrint.rs:9     println!<span class="o">(</span><span class="s2">&quot;{} of {:b} people know binary, the other half don&#39;t&quot;</span>, 1i, 2i<span class="o">)</span>;
</span><span class='line'>                                                                                        ^~
</span></code></pre></td></tr></table></div></figure>


<h3>range(a, b) –> (a..b)</h3>

<p>つぎに、<a href="https://github.com/katsyoshi/rustbyexample/blob/master/10.ForAndRange/ForAndRange.rs#L2">Chap. 10のコード</a>で<code>range(a, b)</code>がunstableになっているので<code>(a..b)</code>に変更しました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>ForAndRange.rs:2:14: 2:19 warning: use of unstable item: will be replaced by range notation, <span class="c">#[warn(unstable)] on by default</span>
</span><span class='line'>ForAndRange.rs:2     <span class="k">for </span>n in range<span class="o">(</span>1u32, 101<span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                              ^~~~~
</span></code></pre></td></tr></table></div></figure>


<h2>おわり</h2>

<p>いま確認してたらそもそもRust by Example自体が変更されてた…</p>

<p>ちゃんちゃん</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby on RailsでTypeScriptを使ってみる]]></title>
    <link href="http://blog.katsyoshi.org/blog/2015/01/12/typescript-in-rails/"/>
    <updated>2015-01-12T11:41:25+09:00</updated>
    <id>http://blog.katsyoshi.org/blog/2015/01/12/typescript-in-rails</id>
    <content type="html"><![CDATA[<p>ふとRuby on RailsでTypeScriptを使いたくなったのでうごくようにしてみた。</p>

<h2>インストール</h2>

<p>これは簡単で <code>Gemfile</code> に <code>typescript-rails</code> を追加すればいけます。ですが、<a href="http://stackoverflow.com/questions/28117786/why-am-i-not-able-to-compile-a-file-that-references-jquery-d-ts">jQueryがTypeScript v1.4以上しかサポートしていないようなので</a>それに対応したものも追加します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s1">&#39;typescript-src&#39;</span><span class="p">,</span> <span class="ss">github</span><span class="p">:</span> <span class="s1">&#39;katsyoshi/typescript-src-ruby&#39;</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;typescript-rails&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>インストールはこれだけでOKです。</p>

<h3>jQueryをつかう</h3>

<p>TypeScriptでjQueryを使う場合、TypeScriptの型定義ファイルをインストールする必要があります。
で、それを自力で作るのは大変なので、 <code>tsd</code> を利用してインストールします。</p>

<h4>tsd をインストール</h4>

<p><code>tsd</code> は <code>npm</code> でインストールできるので、それでインストールします。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>npm install tsd -g
</span></code></pre></td></tr></table></div></figure>


<p>でインストールできたので、この <code>tsd</code> を利用してjQueryの型定義ファイルをインストールします。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>tsd init
</span><span class='line'><span class="nv">$ $EDITOR</span> tsd.json
</span><span class='line'>  path: <span class="s2">&quot;app/assets/javascripts/typings&quot;</span>,
</span><span class='line'>  bundle: <span class="s2">&quot;app/assets/javascripts/typings/tsd.d.ts&quot;</span>
</span><span class='line'><span class="nv">$ </span>tsd query jquery -osa install
</span></code></pre></td></tr></table></div></figure>


<p>でjQueryを利用する準備は整いました。</p>

<h2>TypeScriptを書いてみよう</h2>

<p>コンソールに <code>hello, world!</code> を出すだけの例を示します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">$</span><span class="p">(()</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;hello, world!&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>でいけますよ。
が <code>$('#hello').text('hoge');</code> いかねぇ。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mikutter Advent Calendar 1日目]]></title>
    <link href="http://blog.katsyoshi.org/blog/2014/12/01/mikutter-advent-calendar-1-day/"/>
    <updated>2014-12-01T23:59:59+09:00</updated>
    <id>http://blog.katsyoshi.org/blog/2014/12/01/mikutter-advent-calendar-1-day</id>
    <content type="html"><![CDATA[<p><a href="http://www.adventar.org/calendar/401">一日目</a>らしいですね。</p>

<h2>今のmikutter環境</h2>

<p>はGentoo/Linuxで動いています。</p>

<p>よく考えてみたら今の環境になってLinuxでmikutterを使うのははじめてです。 Linuxになって一番感じたのインストールすごく楽になったことです。</p>

<h2>今までのmikutter環境</h2>

<p>今までMacで基本的に利用してたので苦労してた。 Macではとくにインストール、gemのupdateが大変でした。 Macでの環境では、HomebrewのGTK2のせいか、RubyGtk2がまともに動かないことが頻繁におこりました。 あと、最後まで解決できなかったのが特定の文字列がくるとクラッシュするというバグがありました。</p>

<h2>mikutterとの出会い</h2>

<p>出会いとしてはtwitterでTLを眺めてたら、@toshi_a って人がtwitterクライアントをつくってるらしいということで 取り敢えずFreeBSDでインストールしたのがはじめてだったとおもいます。 このときはFreeBSDでインストールして、X転送したものをMacで表示したとおもいます。</p>

<p>それ以降はMacでインストールして、<a href="http://github.com/katsyoshi/fav">mikutterのプラグイン</a>を書いて公開したりしてました。</p>

<h2>おわり</h2>

<p>おわりおわり。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Railsで空のテストファイルを削除]]></title>
    <link href="http://blog.katsyoshi.org/blog/2014/11/21/remove-empty-example-files/"/>
    <updated>2014-11-21T16:07:38+09:00</updated>
    <id>http://blog.katsyoshi.org/blog/2014/11/21/remove-empty-example-files</id>
    <content type="html"><![CDATA[<p>Ruby on RailsのプロジェクトでGit管理されているTestで空のテストファイルを
削除するには以下のコマンドを利用することで削除できます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>git grep -e it --or -e specify -L -- spec/<span class="o">{</span>model,controller<span class="o">}</span>s | xgrep git rm -f --
</span></code></pre></td></tr></table></div></figure>


<h3>参考</h3>

<ul>
<li><a href="https://www.kernel.org/pub/software/scm/git/docs/git-grep.html">man git grep</a></li>
<li><a href="http://qiita.com/tbaba/items/a67c8d79c6c4d0dc9b73">Git grepを便利に使う-eオプションについて</a></li>
<li><a href="http://qiita.com/rosylilly/items/9648ad2c8aa53465372b">複数人での Git 開発に便利な 3 つのコマンド</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mikutter Advent Calendar]]></title>
    <link href="http://blog.katsyoshi.org/blog/2014/11/04/mikutter-advent-calendar/"/>
    <updated>2014-11-04T23:13:40+09:00</updated>
    <id>http://blog.katsyoshi.org/blog/2014/11/04/mikutter-advent-calendar</id>
    <content type="html"><![CDATA[<p>寒くなりはじめましたね。今年も残すところあと二ヶ月ですね。
先日、浅草浅草寺で、Ingressおじさんに声かけられてイライラしてます。</p>

<p>そういうことで<a href="http://www.adventar.org/calendars/401">mikutterのAdventCalendar</a>を立てましたので参加してくだされ~</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dockerではまってます]]></title>
    <link href="http://blog.katsyoshi.org/blog/2014/10/01/pitfall-in-docker/"/>
    <updated>2014-10-01T21:11:04+09:00</updated>
    <id>http://blog.katsyoshi.org/blog/2014/10/01/pitfall-in-docker</id>
    <content type="html"><![CDATA[<p>タイトルのとおりです。
Gentoo/LinuxでDockerが起動しないのでとりあえずメモ。</p>

<h2>インストール</h2>

<p>dockerの<a href="https://docs.docker.com/installation/gentoolinux/">Gentooインストールページ</a>を参考に<a href="https://github.com/tianon/docker-overlay">overlay</a>を導入します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>sudo layman -a docker
</span><span class='line'><span class="nv">$ </span>sudo eix-sync
</span><span class='line'><span class="nv">$ </span>sudo emerge -av app-emulators/docker
</span></code></pre></td></tr></table></div></figure>


<p>ここでカーネルオプションの警告が出るのでひとつひとつ潰しておきます。</p>

<h2>起動</h2>

<p>インストールおわったら、起動させますが、以下のようなログが出てるので起動できません。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>2014/10/01 18:39:17 docker daemon: 1.1.2 d84a070; execdriver: native; graphdriver:
</span><span class='line'><span class="o">[</span>6c541422<span class="o">]</span> +job serveapi<span class="o">(</span>unix:///var/run/docker.sock<span class="o">)</span>
</span><span class='line'><span class="o">[</span>6c541422<span class="o">]</span> +job initserver<span class="o">()</span>
</span><span class='line'><span class="o">[</span>6c541422.initserver<span class="o">()]</span> Creating server
</span><span class='line'><span class="o">[</span>6c541422<span class="o">]</span> +job init_networkdriver<span class="o">()</span>
</span><span class='line'><span class="o">[</span>6c541422.init_networkdriver<span class="o">()]</span> creating new bridge <span class="k">for </span>docker0
</span><span class='line'>package not installed
</span><span class='line'><span class="o">[</span>6c541422<span class="o">]</span> -job init_networkdriver<span class="o">()</span> <span class="o">=</span> ERR <span class="o">(</span>1<span class="o">)</span>
</span><span class='line'>package not installed
</span><span class='line'><span class="o">[</span>6c541422<span class="o">]</span> -job initserver<span class="o">()</span> <span class="o">=</span> ERR <span class="o">(</span>1<span class="o">)</span>
</span><span class='line'>2014/10/01 18:39:17 package not installed
</span></code></pre></td></tr></table></div></figure>


<p>このときは <code>bridge-utils</code> をインストールすればいいのかなと思ってたら、インストールしても解決できないです。</p>

<h2>おわり</h2>

<p>どなたか助けてくだされ〜</p>

<h2>追記</h2>

<p>再構築したカーネルをインストールしてなかったというオチでした。</p>

<p>ちゃんちゃん</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RubyKaigi2014]]></title>
    <link href="http://blog.katsyoshi.org/blog/2014/09/22/rubykaigi2014/"/>
    <updated>2014-09-22T19:10:00+09:00</updated>
    <id>http://blog.katsyoshi.org/blog/2014/09/22/rubykaigi2014</id>
    <content type="html"><![CDATA[<p><a href="http://rubykaigi.org/2014">RubyKaigi2014</a>に行ってきました。
聞いたもの一覧です。</p>

<h2>1日目</h2>

<ul>
<li><a href="http://rubykaigi.org/2014/presentation/S-KoichiSasada">Building the Ruby interpreter &mdash; What is easy and what is difficult?</a></li>
<li><a href="http://rubykaigi.org/2014/presentation/S-NarihiroNakamura">Symbol GC</a> <a href="http://www.slideshare.net/authorNari/symbol-gc">スライド</a></li>
<li><a href="http://rubykaigi.org/2014/presentation/S-ReiOdaira">Eliminating Giant VM Lock in Ruby through Hardware Transactional Memory</a></li>
<li><a href="http://rubykaigi.org/2014/presentation/S-SzuKaiHsu">Cores unleashed Part II: Introduction to GobiesVM (and Software Transactional Memory)</a> <a href="https://speakerdeck.com/brucehsu/core-unleashed-part-ii-introduction-to-gobiesvm-and-stm-at-rubykaigi-2014">スライド</a></li>
<li>Committers vs. the world</li>
</ul>


<p>初日は笹田さんのキーノートを聞いた。あとはなりさんのSymbolをGCする話、HTM、STMの話を聞いていた。
SymbolをGCする話はいままでGCされないことを知らなかったので便利かなと。
懇親会では、笹田さんと鳥井さんがペアルックだったので写真撮ったのですが、携帯のカメラアプリで保存できなかったのが心のこりです。</p>

<h2>2日目</h2>

<ul>
<li><a href="http://rubykaigi.org/2014/presentation/S-YukihiroMatzMatsumoto">Comming soon&hellip;</a></li>
<li><a href="http://rubykaigi.org/2014/presentation/S-MasahiroIde">A Just in Time compiler for CRuby (CRuby言語処理系向けJITコンパイラ)</a></li>
<li><a href="http://rubykaigi.org/2014/presentation/S-ThiagoScalone-DanielRodriguez">MRuby as Development Platform for Payments</a></li>
<li><a href="http://rubykaigi.org/2014/presentation/S-TakehikoYOSHIDA">Open the door of embedded systems to IoT! mruby on LEGO Mindstorms EV3®</a></li>
<li><a href="http://rubykaigi.org/2014/presentation/S-ShotaFukumori">Scalable deployments &ndash; How we deploy Rails app to 100+ hosts in a minute</a> <a href="https://speakerdeck.com/sorah/scalable-deployments-how-we-deploy-rails-app-to-150-plus-hosts-in-a-minute">スライド</a></li>
<li><a href="http://rubykaigi.org/2014/presentation/S-MATSUMOTORyosuke">Resource Control Architecture scripting with mruby for a Web Server Separating Computer Resources Virtually at Each HTTP Request</a></li>
<li><a href="http://rubykaigi.org/2014/presentation/S-MasahiroNakagawa">ServerEngine: a framework for multiprocess servers in Ruby</a> <a href="http://www.slideshare.net/treasure-data/rubykaigi-2014-serverengine">スライド</a></li>
<li><a href="http://rubykaigi.org/2014/LT">Ligthting Talks</a></li>
</ul>


<p>RubyをJIT使って速くしようという話。福盛さんのデプロイを早くするのは面白かった。どこで利用できるのって話はおいておいて。
松本(り)さんはこのtalkが切っ掛けで<a href="http://hb.matsumoto-r.jp/entry/2014/09/20/003531">就職決まった</a>ようです。LTも面白かったです。</p>

<h2>3日目</h2>

<ul>
<li><a href="http://rubykaigi.org/2014/presentation/S-JonanScheffler">Everything is Broken: A Story of Hope</a></li>
<li><a href="http://rubykaigi.org/2014/presentation/S-NaotoshiSeo">Fluentd Hacking Guide (Fluentd ソースコード完全解説)</a></li>
<li><a href="http://rubykaigi.org/2014/presentation/S-PremSichanugrist">The Ruby Challenge</a></li>
<li><a href="http://rubykaigi.org/2014/presentation/S-MasatoshiSEKI">Make your own synchronization mechanism.</a></li>
<li><a href="http://rubykaigi.org/2014/presentation/S-KouheiSutou">Three Ruby usages &ndash; High-level interface, Glue and Embedding &ndash; Inside Droonga</a> <a href="http://speakerdeck.com/u/kou/p/three-ruby-usages">スライド</a></li>
</ul>


<p>3日目はゆっくり来てAaronとか聞こうかとおもってたけど、午前中はロビーでだらだらしすぎてなにもきいていないです。
午後から、Jonanは2011の最後のRubyKaigiのときに会ってたので今こういうことやってるのだなーと。
fluentdのプラグイン書いてるけど、なんとなく動いてるし、そのプラグインを利用してて特に問題なかったので、これがあってよかった。
RubyChallengeはコミッタでも間違えててむずかしい。
咳さんと須藤さんの話はすごくよかった。</p>

<h2>おわり</h2>

<p>RubyKaigi2014行ってきました。この3日間非常に楽しく過ごせました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[なごや、ながのに行ってきた]]></title>
    <link href="http://blog.katsyoshi.org/blog/2014/09/15/went-to-nagoya-and-nagano/"/>
    <updated>2014-09-15T16:33:45+09:00</updated>
    <id>http://blog.katsyoshi.org/blog/2014/09/15/went-to-nagoya-and-nagano</id>
    <content type="html"><![CDATA[<p>友人が車で田舎に帰るということなので勢いで名古屋に連れてきてもらった。</p>

<p>土曜日の夜７時東京出発で夜９時半ころに三島に着き、三島の友人とカレー食べた。</p>

<p style="text-align:center;"> <img src="http://blog.katsyoshi.org/images/photo/mishima-curry.png%20=%20512x" alt="カレー" /></p>

<p>泊まるとこ決めてないので名古屋まで連れてきてもらって、
ぷらぷらして泊まるところを探してた。
三連休の初日のためかネカフェがどこもいっぱいでしかたないので
カラオケで一泊。</p>

<p>が、実は寝れてなかったです。３０分ほど目を閉じてました。
ので、退出時間に退出し、名古屋駅６時１２分発の中津川行きに乗り込み、
中津川乗り換えの塩沢を目指しました。
ここではなにごともなく乗り換えることができました。
乗り換えたあとに目の前に座った女の子がかわいかったです。</p>

<p>電車の中で温泉宿に行こうと、募集したら神のようなかたが、</p>

<blockquote class="twitter-tweet" lang="ja"><p><a href="https://twitter.com/katsyoshi">@katsyoshi</a> このあたりからどうぞ。<a href="http://t.co/EEEEXKlTpE">http://t.co/EEEEXKlTpE</a></p>&mdash; 月白（I, bot）瑠璃 (@TsukishiroRuri) <a href="https://twitter.com/TsukishiroRuri/status/510889560532717568">September 13, 2014</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>ということだったので、ここの二位だった、<a href="http://www.akanejyku.com">茜宿</a>に行くことにしました。</p>

<p>とはいえぶらりのーぷらんで塩尻に来ているので、どうやって行けばいいのか
わからないのです。出発前のコミュニティバスの運転手さんに話を聞いたりしたり、
また、タクシーの料金表があったので、それを見たら、片道4000円弱かかる
ことがわかったので、レンタカーを借りることにしました。
ペーパーの状態だったのに、この判断した俺は寝不足の勢いだけだったなと。</p>

<p>借りた車に乗ってすぐに向かうところでしたが、下着をもってきてないことを思いだしたので、
近くにスーパーマーケットらしきものを発見しすぐに行きました。
下着類を調達したのでいざ温泉へ。</p>

<p>温泉へはとくになにもなく無事に辿りつけました。
温泉では、入湯以外に昼食もとれるということで、昼食も一緒にとることにしました。
温泉自体は、眺めが非常によく、天気も大変よく、開放的な気分になりました。
&ndash;> <img src="http://blog.katsyoshi.org/images/photo/gake-no-yu-akanejuku-nagame.png%20=%20512x" alt="崖の湯" /> &lt;&ndash;</p>

<p>温泉の温度がちょっと低かったのが残念かなという程度で、よかったです。
温泉あがってから昼食で、天ざるそばを食べたのですが、そばは美味しかったです。</p>

<p>温泉の後は、折角車があるのだし、まだ行ったことのない松本城に行くことにしました。
松本城は、石垣の改修中とさらに、三連休の中日ということもあり、入るのに1時間、
見学1時間という案内がでてたので、外から眺めるだけにしました。
観光はこれぐらいにして帰ることにしましたが、渋滞が多く結構時間がかかりました。
&ndash;> <img src="http://blog.katsyoshi.org/images/photo/matsumoto-jo-casle-info.png%20=%20512x" alt="松本城" /> &lt;&ndash;</p>

<p>最後に八王子によって夕飯を食べ、ておくれたと思わせつつも無事帰りつくことができました~。
塩尻17時前出発して、21時前に八王子に到着しました。</p>

<p>ということで名古屋から新宿まで塩尻を経由して鈍行の中央線を走破しました。
おわり。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Gentoo LinuxむけのJubatusパッケージ書いたよ]]></title>
    <link href="http://blog.katsyoshi.org/blog/2014/09/12/jubatus-in-gentoo/"/>
    <updated>2014-09-12T12:29:20+09:00</updated>
    <id>http://blog.katsyoshi.org/blog/2014/09/12/jubatus-in-gentoo</id>
    <content type="html"><![CDATA[<p><a href="http://blog.katsyoshi.org/blog/2014/08/20/gentoo-install-battle-part-i/">PC</a>を<a href="http://blog.katsyoshi.org/blog/2014/08/21/gentoo-install-battle-part-ii/">買い替えた</a>ので<a href="http://blog.katsyoshi.org/blog/2014/08/31/gentoo-install-battle-part-iii/">環境構築</a>してます。
<a href="https://github.com/kazuki/overlay/tree/master/sci-calculators/jubatus">Jubatusのoverlay</a>があったのですが、古かったので新しく<a href="https://github.com/katsyoshi/overlay">Jubatusのoverlay</a>作成しました。</p>

<h2>インストール</h2>

<p>これは、以下のコマンドでインストールができます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># curl https://raw.githubusercontent.com/katsyoshi/overlay/master/profiles/layman.xml &gt; /etc/layman/overlays/katsyoshi.xml</span>
</span><span class='line'><span class="c"># layman -f -a katsyoshi</span>
</span><span class='line'><span class="c"># eix-sync</span>
</span><span class='line'><span class="c"># emerge -av jubatus</span>
</span></code></pre></td></tr></table></div></figure>


<p>でいけるとおもいます。</p>

<h2>未実装</h2>

<ul>
<li>jubatus_coreのオプションがはたらいてない(ハズ)</li>
<li>jubatus_msgpack-rpcの依存パッケージにdev-libs/msgpackをいれていない</li>
<li>jubatusのオプションを確認していない</li>
</ul>


<p>などなどあるので、PRまってます。</p>

<h2>まとめ</h2>

<p><a href="https://github.com/kazuki/overlay/">よくみたら</a>必要なライブラリのパッケージもあったのでこれのバージョンとjubatus_core追加するだけでよかったかも。</p>

<p>ちゃんちゃん</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Gentoo Install Battle Part III]]></title>
    <link href="http://blog.katsyoshi.org/blog/2014/08/31/gentoo-install-battle-part-iii/"/>
    <updated>2014-08-31T10:47:14+09:00</updated>
    <id>http://blog.katsyoshi.org/blog/2014/08/31/gentoo-install-battle-part-iii</id>
    <content type="html"><![CDATA[<p>これ<a href="http://blog.katsyoshi.org/blog/2014/08/20/gentoo-install-battle-part-i/">まで</a>の<a href="http://blog.katsyoshi.org/blog/2014/08/21/gentoo-install-battle-part-ii/">流れ</a>で準備が整ったので、Installを始めます。</p>

<h2>インストール</h2>

<p>これは<a href="http://wiki.gentoo.org/">Gentoo Wiki</a>を見ながらで大丈夫です。</p>

<h3>嵌ったところ</h3>

<p>音が鳴らないという問題が発生しました。<a href="http://pocke.hatenablog.com/entry/2014/02/02/100636">理由</a>は簡単でしたのですぐに設定しました。</p>

<p>つぎにネットワークの設定をnetmountからNetworkManagerに変更しました。
設定は<a href="http://wiki.gentoo.org/wiki/NetworkManager">ここ</a>で行なえばよいです。</p>

<p>最後にibus-mozcをインストールして終りです。</p>

<h2>mikutter</h2>

<p>GentooInstallBattleはmikutterをインストールしてtweetすることなのでmikutterをインストールします。
ここではrbenvを利用してmikutterのインストールします。
まずはrbenvとruby-buildをインストールします。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>git clone https://github.com/sstephenson/rbenv.git ~/.rbenv
</span><span class='line'><span class="nv">$ </span>git clone https://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build
</span></code></pre></td></tr></table></div></figure>


<p>つぎにrbenvの設定を行います。以下の設定を<code>~/.bashrc</code>あたりに追記してください</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span>~/.rbenv/bin:<span class="nv">$PATH</span>
</span><span class='line'><span class="nb">eval</span> <span class="s2">&quot;$(rbenv init -)&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Rubyのインストールは<code>rbenv install 2.1.2</code>でインストールします。
最後にmikutterをダウンロードし、環境を構築します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>git clone https://github.com/mikutter/mikutter.git ~/mikutter
</span><span class='line'><span class="nv">$ </span><span class="nb">cd</span> ~/mikutter
</span><span class='line'><span class="nv">$ </span>bundle install
</span><span class='line'><span class="nv">$ </span>bundle <span class="nb">exec </span>ruby mikutter.rb
</span></code></pre></td></tr></table></div></figure>


<p>でインストール終了!!
これで快適なmikutterライフがておくれますね。</p>

<p><img src="http://blog.katsyoshi.org/images/photo/mikutter.png" alt="mikutter" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Gentoo Install Battle Part II]]></title>
    <link href="http://blog.katsyoshi.org/blog/2014/08/21/gentoo-install-battle-part-ii/"/>
    <updated>2014-08-21T20:01:51+09:00</updated>
    <id>http://blog.katsyoshi.org/blog/2014/08/21/gentoo-install-battle-part-ii</id>
    <content type="html"><![CDATA[<p>X240の準備は終ったので、<a href="http://wiki.gentoo.org/wiki/Quick_install_guide">インストール</a>します。基本的にはこの流れです。</p>

<h2>USBブート</h2>

<p><a href="http://blog.katsyoshi.org/blog/2014/08/20/gentoo-install-battle-part-i/">作成したUSBメモリ</a>をX240に差して起動します。
起動したら、まずパーティションの設定を行います。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>gpart /dev/sda
</span></code></pre></td></tr></table></div></figure>


<p>で不要なパーティションを削除し、必要なパーティションを作成します。</p>

<h2>無線LAN</h2>

<p>ネットワークを接続しますが、今回は無線LANを利用してインストールを行います。</p>

<p>まず、どこか適当な位置に<a href="http://www.xmisao.com/2014/01/16/how-to-connect-wpa2-wireless-lan-using-wpa-supplicant.html">リンク先</a>のファイルを作成してください。</p>

<p>次に以下のコマンドを実行します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>wpa_supplicant -Dnl80211 -ieth0 -c/path/to/supplicant.config
</span></code></pre></td></tr></table></div></figure>


<p>実行したら、接続されているのでATL + F2とかでコンソールの表示を変更してください。</p>

<h2>おわり</h2>

<p>有線のLANケーブルがなかったからはまった。
続きは明日以降に…</p>
]]></content>
  </entry>
  
</feed>
