<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: diary | katsyoshiのめもみたいなもの]]></title>
  <link href="http://blog.katsyoshi.org/blog/categories/diary/atom.xml" rel="self"/>
  <link href="http://blog.katsyoshi.org/"/>
  <updated>2017-12-18T22:55:51+09:00</updated>
  <id>http://blog.katsyoshi.org/</id>
  <author>
    <name><![CDATA[katsyoshi]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[IRubyはじめました]]></title>
    <link href="http://blog.katsyoshi.org/blog/2017/12/18/hello/"/>
    <updated>2017-12-18T21:56:55+09:00</updated>
    <id>http://blog.katsyoshi.org/blog/2017/12/18/hello</id>
    <content type="html"><![CDATA[<p>表題のとおり、 <a href="https://github.com/SciRuby/iruby">IRuby</a> をはじめてみました</p>

<h3>インストール</h3>

<p>インストールは簡単で <code>gem install iruby</code> でいけますが、私の利用している環境では依存している <a href="https://github.com/zeromq/czmq">czmq</a> が古かったので手動でインストールして回避しています。</p>

<p><code>console
git clone https://github.com/zeromq/czmq.git
cd czmq
./autogen
./configure --prefix=${HOME}/.local
make -j4
make install
gem install iruby cztop
LD_LIBRARY_PATH=${HOME}/.local/lib iruby
</code></p>

<p>でインストールと動作はできます。画像貼るのがメンドイので <code>ipython</code> 貼っておきます。</p>

<p>```
{
 &ldquo;cells&rdquo;: [
  {
   &ldquo;cell_type&rdquo;: &ldquo;code&rdquo;,
   &ldquo;execution_count&rdquo;: 4,
   &ldquo;metadata&rdquo;: {},
   &ldquo;outputs&rdquo;: [</p>

<pre><code>{
 "data": {
  "text/html": [
   "\n",
   "  &lt;script&gt;\n",
   "  requirejs.config({paths: { 'plotly': ['https://cdn.plot.ly/plotly-latest.min'] }})\n",
   "  &lt;/script&gt;\n",
   "\n",
   "\n",
   "&lt;div id=\"c34db0db-dc37-4ae3-a2b3-33ab99830b89\" style=\"height: 100%; width: 100%;\"&gt;&lt;/div&gt;\n",
   "\n",
   "&lt;script&gt;\n",
   " require(['plotly'], function(Plotly) { \n",
   "Plotly.newPlot(\n",
   "  'c34db0db-dc37-4ae3-a2b3-33ab99830b89',\n",
   "  [{\"x\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],\"y\":[100,81,64,49,36,25,16,9,4,1,0,1,4,9,16,25,36,49,64,81,100],\"type\":null,\"mode\":\"\"}],\n",
   "  {\"width\":1000,\"height\":500},\n",
   "  {\"linkText\":\"Export to plot.ly\",\"showLink\":true}\n",
   ")\n",
   "\n",
   "window.addEventListener('resize', function() {\n",
   "  Plotly.Plots.resize(document.getElementById('c34db0db-dc37-4ae3-a2b3-33ab99830b89'))\n",
   "})\n",
   " }) \n",
   "&lt;/script&gt;"
  ],
  "text/plain": [
   "#&lt;Plotly::Offline::HTML:0x000056356f14be00 @id=\"c34db0db-dc37-4ae3-a2b3-33ab99830b89\", @data=[{:x=&gt;[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], :y=&gt;[100, 81, 64, 49, 36, 25, 16, 9, 4, 1, 0, 1, 4, 9, 16, 25, 36, 49, 64, 81, 100], :type=&gt;nil, :mode=&gt;\"\"}], @layout={:width=&gt;1000, :height=&gt;500}, @config={:linkText=&gt;\"Export to plot.ly\", :showLink=&gt;true}, @embedded=true&gt;"
  ]
 },
 "metadata": {},
 "output_type": "display_data"
},
{
 "data": {
  "text/plain": [
   "#&lt;CZTop::Socket::PUB:0x56356e7f3620 last_endpoint=\"tcp://127.0.0.1:45835\"&gt;"
  ]
 },
 "execution_count": 4,
 "metadata": {},
 "output_type": "execute_result"
}
</code></pre>

<p>   ],
   &ldquo;source&rdquo;: [</p>

<pre><code>"require 'daru'\n",
"require 'daru/plotly'\n",
"include Daru::Plotly::Methods\n",
"\n",
"dv = Daru::Vector.new((-10..10).map{|n| n ** 2 })\n",
"plot(dv, x: \"x\", y: \"y\").show"
</code></pre>

<p>   ]
  }
 ],
 &ldquo;metadata&rdquo;: {
  &ldquo;kernelspec&rdquo;: {
   &ldquo;display_name&rdquo;: &ldquo;Ruby 2.4.2&rdquo;,
   &ldquo;language&rdquo;: &ldquo;ruby&rdquo;,
   &ldquo;name&rdquo;: &ldquo;ruby&rdquo;
  },
  &ldquo;language_info&rdquo;: {
   &ldquo;file_extension&rdquo;: &ldquo;.rb&rdquo;,
   &ldquo;mimetype&rdquo;: &ldquo;application/x-ruby&rdquo;,
   &ldquo;name&rdquo;: &ldquo;ruby&rdquo;,
   &ldquo;version&rdquo;: &ldquo;2.4.2&rdquo;
  }
 },
 &ldquo;nbformat&rdquo;: 4,
 &ldquo;nbformat_minor&rdquo;: 2
}
```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ウイスキーアドベントカレンダー2日目]]></title>
    <link href="http://blog.katsyoshi.org/blog/2017/12/02/wiskey-advent-calendar/"/>
    <updated>2017-12-02T00:00:00+09:00</updated>
    <id>http://blog.katsyoshi.org/blog/2017/12/02/wiskey-advent-calendar</id>
    <content type="html"><![CDATA[<p><a href="https://adventar.org/calendars/2219">ウイスキー Advent Calendar 2017</a> の2日目の記事です。</p>

<p>ウィスキーはピートの香りが強いほうがすきです。</p>

<p>とりあえず蒸留所に行ってきた話を
以前、<a href="http://www.suntory.co.jp/factory/hakushu/">白州蒸留所</a> と <a href="http://www.suntory.co.jp/factory/yamazaki/">山崎蒸留所</a> に行ったことがあるのでその話を。</p>

<h2>白州蒸留所</h2>

<p>白州へは5年くらい前に5人でわいわいしながら行ってきました。
ここでは、工場見学のツアーに参加しました。
また、テイスティングルームですこしウイスキーを試せて良いです。</p>

<h2>山崎蒸留所</h2>

<p>山崎は去年、京都へ行く機会があり、ウイスキーを買うために行きました。
ここでも工場見学可能だったのですが、事前に予約が必要であるため
今回はパスして、工場に併設されているウイスキーのテイスティングルーム
で幾つかのウイスキーをたのしみ、ショップでウイスキーと梅酒を買って
鴨川へ</p>

<h2>おわり</h2>

<p>日本のウイスキーはあまり得意じゃないのですが、蒸留所に行くのは楽しいし
楽しみ方を教えてもらえるので近くに蒸留所がある方は一度行ってみるとよいとおもいます</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Emacsの構成管理をitamaeで管理]]></title>
    <link href="http://blog.katsyoshi.org/blog/2017/07/01/emacs-config-from-itamae/"/>
    <updated>2017-07-01T22:59:16+09:00</updated>
    <id>http://blog.katsyoshi.org/blog/2017/07/01/emacs-config-from-itamae</id>
    <content type="html"><![CDATA[<p>仕事とプライベート環境でemacsのフォント等設定するのがいいかげんダるくなってきたので、Itamaeを流すだけでイイカンジにするようにした</p>

<h2>もともとどうかんりしてたのか</h2>

<p>もともと<a href="https://github.com/katsyoshi/dot.emacs.d">github</a>で管理していたが、さすがにFontの環境異差をちょこちょこ変えるのが面倒になった</p>

<h2>Itamae de kanri</h2>

<p>gitで管理しているので環境異差ある部分を<a href="https://github.com/katsyoshi/itamae-recipes">itamae</a>で管理するように方針を転換。</p>

<p>```yaml
emacs:
  font:</p>

<pre><code>family: Ricty
height: 120
</code></pre>

<p>  packages:</p>

<pre><code>- auto-complete
</code></pre>

<p>  settings:</p>

<pre><code>- git
</code></pre>

<p>```</p>

<p>とか書いてあとはItamaeを実行することで必要なパッケージのインストール、
必要な設定へのリンク追加などをするようにしました。</p>

<h2>おわり</h2>

<p>これでなにも考えなくてすむようになるのかな？</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rustful web]]></title>
    <link href="http://blog.katsyoshi.org/blog/2017/06/04/rustful-web/"/>
    <updated>2017-06-04T23:17:45+09:00</updated>
    <id>http://blog.katsyoshi.org/blog/2017/06/04/rustful-web</id>
    <content type="html"><![CDATA[<p><a href="https://www.rust-lang.org/ja-JP/">rust</a> で Web Application をつくろうと思って <a href="https://github.com/Ogeon/rustful">rustful</a> を使ってやってみてたりした。</p>

<p>ドキュメントと利用しているバージョンのコードが異なり、必要なモジュールが読み込めなかったり、関数の引数が異なったりしてうごかねぇってなったのでHEADを使うことで解決。</p>

<h2>🍻</h2>

<p>とりあえずいつものメンバーで🍻にいってきた。浅草のカンピオンエールという店でのんでそのあと隣の店でお好み焼きをたべてた。お好み焼き屋のあとは河原まであるて吾妻橋からみえる
やつをながめながらビールのんでた</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[use red-arrow.gem]]></title>
    <link href="http://blog.katsyoshi.org/blog/2017/05/31/use-red-arrow-dot-gem/"/>
    <updated>2017-05-31T23:27:57+09:00</updated>
    <id>http://blog.katsyoshi.org/blog/2017/05/31/use-red-arrow-dot-gem</id>
    <content type="html"><![CDATA[<p><a href="https://blog.katsyoshi.org/blog/2017/05/29/installing-apache-arrow/">こないだインストール</a> した <a href="https://arrow.apache.org/">Apache Arrow</a> がとりあえず <a href="https://github.com/red-data-tools/red-arrow">Ruby</a> でうごくようになったのでメモ</p>

<h2>メモ</h2>

<p>gemのインストールは前回のインストールを行なえば問題ないです。ですが、arrowを利用しようとすると失敗します。</p>

<p><code>ruby
require "arrow"
/home/katsu/.rbenv/versions/2.4.1/lib/ruby/gems/2.4.0/gems/gobject-introspection-3.1.4/lib/gobject-introspection/loader.rb:37:in `require':GObjectIntrospection::RepositoryError::TypelibNotFound: Typelib file for namespace 'Arrow' (any version) not found
</code></p>

<p>これは <code>GObjectIntrospection</code> の<a href="https://github.com/red-data-tools/red-arrow/blob/master/lib/arrow.rb#L25">ロードに失敗</a>しているようです。
なので<a href="http://www.clear-code.com/blog/2013/12/16.html">ここ</a>や<a href="http://qiita.com/groonga/items/71b145b37d77bd160bf2">ここ</a>を参考に環境変数 <code>GI_TYPELIB_PATH</code> を設定すると読み込まれるようになり実行できます。</p>

<p><code>console
$ export GI_TYPELIB_PATH=/path/to/girepository-1.0
$ irb -rarrow
</code></p>

<p>とやるとエラーがなくなります。</p>

<p>最後に<a href="https://github.com/red-data-tools/red-arrow/tree/master/example">サンプル</a>を実行して確認しました!</p>

<p>```console
% ruby write-file.rb</p>

<h1>% ruby read-file.rb</h1>

<p>record-batch[0]:
  uint8: [1, 2, 4, 8]
  uint16: [1, 2, 4, 8]
  uint32: [1, 2, 4, 8]
  uint64: [1, 2, 4, 8]
  int8: [1, -2, 4, -8]
  int16: [1, -2, 4, -8]
  int32: [1, -2, 4, -8]
  int64: [1, -2, 4, -8]
  float: [1.100000023841858, -2.200000047683716, 4.400000095367432, -8.800000190734863]</p>

<h1>  double: [1.1, -2.2, 4.4, -8.8]</h1>

<p>record-batch[1]:
  uint8: [2, 4, 8]
  uint16: [2, 4, 8]
  uint32: [2, 4, 8]
  uint64: [2, 4, 8]
  int8: [-2, 4, -8]
  int16: [-2, 4, -8]
  int32: [-2, 4, -8]
  int64: [-2, 4, -8]
  float: [-2.200000047683716, 4.400000095367432, -8.800000190734863]
  double: [-2.2, 4.4, -8.8]
```</p>

<h2>おわり</h2>

<p>最初ろーどえらーでこまってた</p>
]]></content>
  </entry>
  
</feed>
