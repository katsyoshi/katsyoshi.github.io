<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: rails | katsyoshiのめもみたいなもの]]></title>
  <link href="http://blog.katsyoshi.org/blog/categories/rails/atom.xml" rel="self"/>
  <link href="http://blog.katsyoshi.org/"/>
  <updated>2018-11-06T01:03:03+09:00</updated>
  <id>http://blog.katsyoshi.org/</id>
  <author>
    <name><![CDATA[katsyoshi]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[remove rails assets]]></title>
    <link href="http://blog.katsyoshi.org/blog/2018/11/06/remove-rails-assets/"/>
    <updated>2018-11-06T00:40:32+09:00</updated>
    <id>http://blog.katsyoshi.org/blog/2018/11/06/remove-rails-assets</id>
    <content type="html"><![CDATA[<p>ひさびさに <code>Ruby on Rails</code> の話で、自作の rails application で <code>rails-assets</code> というところからいくつか gem を利用してたので
それを <code>Yarn</code> で同様のパッケージをインストールするように変更した。</p>

<h2>なにをやったのか？</h2>

<p>単純に一旦 <code>rails-assets</code> からインストールしている gem を <code>Gemfile</code> から削除します。</p>

<p>そのあと、 <code>yarn add</code> で <code>package.json</code> を生成し <code>node_modules</code> にインストールします。</p>

<p><code>shellscript
yarn add bootstrap@3 font-awesome jquery
yarn install
rails s
</code></p>

<p>インストールが終了し、railsを起動したら必要な情報(<a href="https://blog.zerokol.com/2018/06/ruby-on-rails-yarn-font-awesome-in.html">font-awesome</a>, <a href="https://qiita.com/fuqda/items/c5756b8f56dcc238c110">bootstrap</a>) を <code>app/assets/{javascripts,stylesheets}</code> に記載。</p>

<p>```js:app/assets/javascripts/application.js</p>

<p>//= require rails-ujs
//= require turbolinks
//= require jquery/dist/jquery.js
//= require bootstrap-sass/assets/javascripts/bootstrap
//= require_tree .
```</p>

<p>```css:app/assets/stylesheets/application.scss
@import &lsquo;bootstrap-sass/assets/stylesheets/bootstrap&rsquo;;
@import &ldquo;font-awesome/scss/variables&rdquo;;
$fa-font-path: &ldquo;font-awesome/fonts/&rdquo;;
@import &ldquo;font-awesome/scss/mixins&rdquo;;
@font-face {
  font-family: &lsquo;FontAwesome&rsquo;;
  src: font-url(&lsquo;#{$fa-font-path}/fontawesome-webfont.eot?v=#{$fa-version}&rsquo;);
  src: font-url(&lsquo;#{$fa-font-path}/fontawesome-webfont.eot?#iefix&amp;v=#{$fa-version}&rsquo;) format(&lsquo;embedded-opentype&rsquo;),</p>

<pre><code>font-url('#{$fa-font-path}/fontawesome-webfont.woff2?v=#{$fa-version}') format('woff2'),
font-url('#{$fa-font-path}/fontawesome-webfont.woff?v=#{$fa-version}') format('woff'),
font-url('#{$fa-font-path}/fontawesome-webfont.ttf?v=#{$fa-version}') format('truetype'),
font-url('#{$fa-font-path}/fontawesome-webfont.svg?v=#{$fa-version}#fontawesomeregular') format('svg');
</code></pre>

<p>  font-weight: normal;
  font-style: normal;
}
@import &ldquo;font-awesome/scss/core&rdquo;;
@import &ldquo;font-awesome/scss/larger&rdquo;;
@import &ldquo;font-awesome/scss/fixed-width&rdquo;;
@import &ldquo;font-awesome/scss/list&rdquo;;
@import &ldquo;font-awesome/scss/bordered-pulled&rdquo;;
@import &ldquo;font-awesome/scss/animated&rdquo;;
@import &ldquo;font-awesome/scss/rotated-flipped&rdquo;;
@import &ldquo;font-awesome/scss/stacked&rdquo;;
@import &ldquo;font-awesome/scss/icons&rdquo;;
@import &ldquo;font-awesome/scss/screen-reader&rdquo;;
$icon-font-path: &ldquo;bootstrap-sass/assets/fonts/bootstrap&rdquo;;
```</p>

<p>ってかいたら使えるようになっています!</p>

<h2>おわり</h2>

<p>ということで <em>IMASARA</em> ですが <code>rails-assets</code> からの脱却ついでに簡単に <code>yarn</code> を利用した assets の導入をやってみました!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ファイル名間違えてテスト通らなかった話]]></title>
    <link href="http://blog.katsyoshi.org/blog/2015/04/09/file-name-needs-scss-extention/"/>
    <updated>2015-04-09T15:38:49+09:00</updated>
    <id>http://blog.katsyoshi.org/blog/2015/04/09/file-name-needs-scss-extention</id>
    <content type="html"><![CDATA[<p><a href="https://rails-assets.org">rails-assets.org</a> から <code>bootstrap-sass-official</code> をインストールし、動かしたら、 test環境でテストが落ちてたのでメモ。</p>

<h2>オチ</h2>

<p>CSSの<a href="https://twitter.com/izumin5210/status/586054782994874368">ファイル名</a>が <code>application.css.scss</code> じゃなかった。</p>

<h2>設定</h2>

<p>まず、<code>Gemfile</code> に以下のように追記をします。</p>

<p><code>ruby
source 'https://rails-assets.org' do
  gem 'rails-asstes-bootstrap-sass-official'
end
</code></p>

<p>あとはいつも通りにインストールします。
次に <code>app/assets/javascripts/application.js</code> や <code>app/assets/stylesheets/application.css</code> に必要な読み込みを<a href="http://qiita.com/izumin5210/items/73f93347a9fe458dbbf5">設定</a>します。</p>

<h2>問題</h2>

<p>以上の設定が終ったあと、 <code>cucumber</code> でテストを実行すると、</p>

<p><code>
File to import not found or unreadable: bootstrap-sass-official/bootstrap-sprockets.
</code></p>

<p>などといわれますのでオチを参考にファイル名変更して終了です。</p>

<h2>おわり</h2>

<p>おわり</p>

<h3>参考</h3>

<ol>
<li><a href="http://qiita.com/izumin5210/items/73f93347a9fe458dbbf5">http://qiita.com/izumin5210/items/73f93347a9fe458dbbf5</a></li>
<li><a href="https://twitter.com/izumin5210/status/586054782994874368">https://twitter.com/izumin5210/status/586054782994874368</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby on RailsでTypeScriptを使ってみる]]></title>
    <link href="http://blog.katsyoshi.org/blog/2015/01/12/typescript-in-rails/"/>
    <updated>2015-01-12T11:41:25+09:00</updated>
    <id>http://blog.katsyoshi.org/blog/2015/01/12/typescript-in-rails</id>
    <content type="html"><![CDATA[<p>ふとRuby on RailsでTypeScriptを使いたくなったのでうごくようにしてみた。</p>

<h2>インストール</h2>

<p>これは簡単で <code>Gemfile</code> に <code>typescript-rails</code> を追加すればいけます。ですが、<a href="http://stackoverflow.com/questions/28117786/why-am-i-not-able-to-compile-a-file-that-references-jquery-d-ts">jQueryがTypeScript v1.4以上しかサポートしていないようなので</a>それに対応したものも追加します。</p>

<p><code>ruby
gem 'typescript-src', github: 'katsyoshi/typescript-src-ruby'
gem 'typescript-rails'
</code></p>

<p>インストールはこれだけでOKです。</p>

<h3>jQueryをつかう</h3>

<p>TypeScriptでjQueryを使う場合、TypeScriptの型定義ファイルをインストールする必要があります。
で、それを自力で作るのは大変なので、 <code>tsd</code> を利用してインストールします。</p>

<h4>tsd をインストール</h4>

<p><code>tsd</code> は <code>npm</code> でインストールできるので、それでインストールします。</p>

<p><code>
$ npm install tsd -g
</code></p>

<p>でインストールできたので、この <code>tsd</code> を利用してjQueryの型定義ファイルをインストールします。</p>

<p><code>
$ tsd init
$ $EDITOR tsd.json
  path: "app/assets/javascripts/typings",
  bundle: "app/assets/javascripts/typings/tsd.d.ts"
$ tsd query jquery -osa install
</code></p>

<p>でjQueryを利用する準備は整いました。</p>

<h2>TypeScriptを書いてみよう</h2>

<p>コンソールに <code>hello, world!</code> を出すだけの例を示します。</p>

<p><code>javascript
$(() =&gt; {
  console.log("hello, world!");
});
</code></p>

<p>でいけますよ。
が <code>$('#hello').text('hoge');</code> いかねぇ。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Railsで空のテストファイルを削除]]></title>
    <link href="http://blog.katsyoshi.org/blog/2014/11/21/remove-empty-example-files/"/>
    <updated>2014-11-21T16:07:38+09:00</updated>
    <id>http://blog.katsyoshi.org/blog/2014/11/21/remove-empty-example-files</id>
    <content type="html"><![CDATA[<p>Ruby on RailsのプロジェクトでGit管理されているTestで空のテストファイルを
削除するには以下のコマンドを利用することで削除できます。</p>

<p><code>
$ git grep -e it --or -e specify -L -- spec/{model,controller}s | xgrep git rm -f --
</code></p>

<h3>参考</h3>

<ul>
<li><a href="https://www.kernel.org/pub/software/scm/git/docs/git-grep.html">man git grep</a></li>
<li><a href="http://qiita.com/tbaba/items/a67c8d79c6c4d0dc9b73">Git grepを便利に使う-eオプションについて</a></li>
<li><a href="http://qiita.com/rosylilly/items/9648ad2c8aa53465372b">複数人での Git 開発に便利な 3 つのコマンド</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
